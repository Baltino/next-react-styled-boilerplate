/* eslint-disable max-len */
import React, { useState } from "react";
import styled from "styled-components";
import { animated, useSpring } from "react-spring";
import { config } from "react-spring/renderprops";
import { oneOfType, string, number, array, any, bool } from "prop-types";

const propTypes = {
  animate: bool,
  viewBox: string,
  stroke: any,
  height: oneOfType([string, number, array]),
  width: oneOfType([string, number, array]),
};

const AnimatedSvg = styled(animated.svg)`
  .target {
    transform-origin: 90% 103%;
  }
`;
/**
 * Render Mi Audiencia Logo. will trigger animation on mouse over it
 * @param {*} animate: if true, it will restart the animation every 5 seconds
 * @param {*} .. 
 */
const Logo = ({ animate = false, height, viewBox = "1127 1481 19063 4091", width }) => {
  const [reset, setReset] = useState(true)
  const onRest = animate ? () => setReset(!reset) : () => {};
  const hoverAnimation = useSpring({
    from: {
      transform: "rotate(0deg)",
    },
    to: {
      transform: "rotate(360deg)",
    },
    config: config.wobbly,
    duration: 5000,
    delay: animate ? 2000 : 0,
    reset,
    onRest,
  });
   
  return (  
    <AnimatedSvg onMouseOver={() => setReset(!reset)} version="1.2" width={width} height={height} viewBox={viewBox} preserveAspectRatio="xMidYMid" fillRule="evenodd" >    
      <path fill="rgb(255,55,101)" stroke="none" d="M 17877,4226 C 17877,4613 17563,4927 17175,4927 16788,4927 16475,4613 16475,4226 16475,3839 16788,3525 17175,3525 17563,3525 17877,3839 17877,4226 Z"/>
      <animated.path className={"target"} style={hoverAnimation} fill="rgb(0,0,0)" stroke="none" d="M 17050,4796 L 17050,5065 C 16696,5015 16403,4725 16341,4371 L 16661,4371 16661,4160 16332,4160 C 16364,3771 16661,3441 17050,3387 L 17050,3666 17261,3666 17261,3385 C 17685,3431 17987,3771 18020,4160 L 17755,4160 17755,4371 18010,4371 C 17948,4725 17650,5025 17261,5067 L 17261,4796 17050,4796 Z M 18496,4160 L 18229,4160 C 18195,3630 17791,3222 17261,3175 L 17261,2890 17050,2890 17050,3177 C 16555,3232 16156,3630 16122,4160 L 15849,4160 15849,4371 16130,4371 C 16194,4831 16590,5224 17050,5276 L 17050,5572 17261,5572 17261,5278 C 17755,5233 18156,4866 18222,4371 L 18496,4371 18496,4160 Z"/>    
      <path fill="rgb(255,255,255)" stroke="none" d="M 16509,4262 C 16509,4262 16508,4262 16507,4262 16508,4262 16509,4262 16509,4262 Z"/>    
      <path fill="rgb(255,255,255)" stroke="none" d="M 18491,4262 C 18492,4262 18493,4262 18493,4262 18492,4262 18492,4262 18491,4262 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 4796,1481 L 4796,3157 4353,3157 4353,2267 3995,2818 3741,2818 3381,2265 3381,3157 2938,3157 2938,1481 3357,1481 3868,2267 4377,1481 4796,1481 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 5495,3157 L 5051,3157 5051,1481 5495,1481 5495,3157 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 1810,4436 L 2241,4436 2068,3952 C 2054,3912 2039,3871 2025,3782 2011,3871 1996,3912 1982,3952 L 1810,4436 Z M 1127,5058 L 1786,3382 2264,3382 2922,5058 2468,5058 2372,4795 1678,4795 1582,5058 1127,5058 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 4447,3382 L 4447,4419 C 4447,4924 4063,5094 3692,5094 3321,5094 2938,4924 2938,4419 L 2938,3382 3381,3382 3381,4395 C 3381,4620 3503,4699 3692,4699 3881,4699 4003,4620 4003,4395 L 4003,3382 4447,3382 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 5354,3766 L 5129,3766 5129,4675 5354,4675 C 5619,4675 5775,4534 5775,4220 5775,3907 5619,3766 5354,3766 Z M 5354,3382 C 5952,3382 6230,3731 6230,4220 6230,4708 5952,5058 5354,5058 L 4685,5058 4685,3382 5354,3382 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 6849,5058 L 6406,5058 6406,3382 6849,3382 6849,5058 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 8311,3382 L 8311,3766 7547,3766 7547,4022 8240,4022 8240,4402 7547,4402 7547,4675 8326,4675 8326,5058 7104,5058 7104,3382 8311,3382 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 8521,5058 L 8521,3382 8940,3382 9596,4345 C 9589,4266 9587,4160 9587,4067 L 9587,3382 10029,3382 10029,5058 9611,5058 8955,4098 C 8962,4177 8965,4282 8965,4373 L 8965,5058 8521,5058 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 11111,3346 C 11281,3346 11451,3382 11597,3451 L 11597,3870 C 11494,3784 11341,3733 11188,3733 10922,3733 10659,3879 10659,4243 10659,4570 10922,4704 11183,4704 11355,4704 11513,4651 11609,4558 L 11609,4988 C 11463,5058 11298,5094 11121,5094 10661,5094 10203,4842 10203,4243 10203,3611 10659,3346 11111,3346 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 12236,5058 L 11792,5058 11792,3382 12236,3382 12236,5058 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 13017,4436 L 13448,4436 13276,3952 C 13261,3912 13247,3871 13233,3782 13218,3871 13204,3912 13190,3952 L 13017,4436 Z M 12335,5058 L 12993,3382 13472,3382 14131,5058 13675,5058 13580,4795 12886,4795 12790,5058 12335,5058 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 14399,5094 C 14269,5094 14154,5022 14154,4856 14154,4693 14269,4621 14399,4621 14531,4621 14643,4693 14643,4856 14643,5022 14531,5094 14399,5094 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 15603,3346 C 15773,3346 15942,3382 16088,3451 L 16088,3870 C 15986,3784 15832,3733 15679,3733 15414,3733 15150,3879 15150,4243 15150,4570 15414,4704 15674,4704 15847,4704 16005,4651 16100,4558 L 16100,4988 C 15954,5058 15789,5094 15612,5094 15153,5094 14695,4842 14695,4243 14695,3611 15150,3346 15603,3346 Z"/>    
      <path fill="rgb(0,0,0)" stroke="none" d="M 19771,3383 L 19261,4169 18751,3383 18319,3383 18319,4090 18507,4090 18566,4090 18566,4443 18507,4443 18319,4443 18319,5078 18778,5078 18778,4165 19134,4725 19388,4725 19731,4168 19731,5078 20190,5078 20190,3383 19771,3383 Z"/>
    </AnimatedSvg>
  );
}

Logo.propTypes = propTypes;

export default Logo;
